# Use the official Golang image as the base image for building the application
FROM golang:1.22-alpine AS build

# Set the Current Working Directory inside the container
WORKDIR /app

# Copy go mod and sum files
COPY go.mod go.sum ./

# Download all dependencies. Dependencies will be cached if the go.mod and go.sum files are not changed
RUN go mod download

# Copy the source from the current directory to the Working Directory inside the container
COPY . .

# Build the Go app
RUN go build -o anc-oms-input-service .

# Use a minimal base image to run the application
FROM alpine:latest

# Set the Current Working Directory inside the container
WORKDIR /app

# Copy the binary from the build stage
COPY --from=build /app/anc-oms-input-service .

# Copy the .env file and other necessary files (like JSON credentials) to the container
COPY .env ./

# Expose the port the service will run on
EXPOSE 9090

# Command to run the executable
CMD ["./anc-oms-input-service"]